// Code generated by optiongen. DO NOT EDIT.
// optiongen: github.com/timestee/optiongen

package promptx

var _ = SelectOptionsOptionDeclareWithDefault()

type SelectOptions struct {
	Options                      []*Suggest
	RowsLimit                    int
	FinishFunc                   func(sels []int)
	Multi                        bool
	FinishKey                    Key
	CancelKey                    Key
	TipText                      string
	TipTextColor                 Color
	TipBGColor                   Color
	ValidFunc                    func(sels []int) error
	ValidTextColor               Color
	ValidBGColor                 Color
	SuggestionTextColor          Color
	SuggestionBGColor            Color
	SelectedSuggestionTextColor  Color
	SelectedSuggestionBGColor    Color
	DescriptionTextColor         Color
	DescriptionBGColor           Color
	SelectedDescriptionTextColor Color
	SelectedDescriptionBGColor   Color
	ScrollbarThumbColor          Color
	ScrollbarBGColor             Color
}

func (cc *SelectOptions) SetOption(opt SelectOption) {
	_ = opt(cc)
}

func (cc *SelectOptions) ApplyOption(opts ...SelectOption) {
	for _, opt := range opts {
		_ = opt(cc)
	}
}

func (cc *SelectOptions) GetSetOption(opt SelectOption) SelectOption {
	return opt(cc)
}

type SelectOption func(cc *SelectOptions) SelectOption

func WithSelectOptionOptions(v ...*Suggest) SelectOption {
	return func(cc *SelectOptions) SelectOption {
		previous := cc.Options
		cc.Options = v
		return WithSelectOptionOptions(previous...)
	}
}

func WithSelectOptionRowsLimit(v int) SelectOption {
	return func(cc *SelectOptions) SelectOption {
		previous := cc.RowsLimit
		cc.RowsLimit = v
		return WithSelectOptionRowsLimit(previous)
	}
}

func WithSelectOptionFinishFunc(v func(sels []int)) SelectOption {
	return func(cc *SelectOptions) SelectOption {
		previous := cc.FinishFunc
		cc.FinishFunc = v
		return WithSelectOptionFinishFunc(previous)
	}
}

func WithSelectOptionMulti(v bool) SelectOption {
	return func(cc *SelectOptions) SelectOption {
		previous := cc.Multi
		cc.Multi = v
		return WithSelectOptionMulti(previous)
	}
}

func WithSelectOptionFinishKey(v Key) SelectOption {
	return func(cc *SelectOptions) SelectOption {
		previous := cc.FinishKey
		cc.FinishKey = v
		return WithSelectOptionFinishKey(previous)
	}
}

func WithSelectOptionCancelKey(v Key) SelectOption {
	return func(cc *SelectOptions) SelectOption {
		previous := cc.CancelKey
		cc.CancelKey = v
		return WithSelectOptionCancelKey(previous)
	}
}

func WithSelectOptionTipText(v string) SelectOption {
	return func(cc *SelectOptions) SelectOption {
		previous := cc.TipText
		cc.TipText = v
		return WithSelectOptionTipText(previous)
	}
}

func WithSelectOptionTipTextColor(v Color) SelectOption {
	return func(cc *SelectOptions) SelectOption {
		previous := cc.TipTextColor
		cc.TipTextColor = v
		return WithSelectOptionTipTextColor(previous)
	}
}

func WithSelectOptionTipBGColor(v Color) SelectOption {
	return func(cc *SelectOptions) SelectOption {
		previous := cc.TipBGColor
		cc.TipBGColor = v
		return WithSelectOptionTipBGColor(previous)
	}
}

func WithSelectOptionValidFunc(v func(sels []int) error) SelectOption {
	return func(cc *SelectOptions) SelectOption {
		previous := cc.ValidFunc
		cc.ValidFunc = v
		return WithSelectOptionValidFunc(previous)
	}
}

func WithSelectOptionValidTextColor(v Color) SelectOption {
	return func(cc *SelectOptions) SelectOption {
		previous := cc.ValidTextColor
		cc.ValidTextColor = v
		return WithSelectOptionValidTextColor(previous)
	}
}

func WithSelectOptionValidBGColor(v Color) SelectOption {
	return func(cc *SelectOptions) SelectOption {
		previous := cc.ValidBGColor
		cc.ValidBGColor = v
		return WithSelectOptionValidBGColor(previous)
	}
}

func WithSelectOptionSuggestionTextColor(v Color) SelectOption {
	return func(cc *SelectOptions) SelectOption {
		previous := cc.SuggestionTextColor
		cc.SuggestionTextColor = v
		return WithSelectOptionSuggestionTextColor(previous)
	}
}

func WithSelectOptionSuggestionBGColor(v Color) SelectOption {
	return func(cc *SelectOptions) SelectOption {
		previous := cc.SuggestionBGColor
		cc.SuggestionBGColor = v
		return WithSelectOptionSuggestionBGColor(previous)
	}
}

func WithSelectOptionSelectedSuggestionTextColor(v Color) SelectOption {
	return func(cc *SelectOptions) SelectOption {
		previous := cc.SelectedSuggestionTextColor
		cc.SelectedSuggestionTextColor = v
		return WithSelectOptionSelectedSuggestionTextColor(previous)
	}
}

func WithSelectOptionSelectedSuggestionBGColor(v Color) SelectOption {
	return func(cc *SelectOptions) SelectOption {
		previous := cc.SelectedSuggestionBGColor
		cc.SelectedSuggestionBGColor = v
		return WithSelectOptionSelectedSuggestionBGColor(previous)
	}
}

func WithSelectOptionDescriptionTextColor(v Color) SelectOption {
	return func(cc *SelectOptions) SelectOption {
		previous := cc.DescriptionTextColor
		cc.DescriptionTextColor = v
		return WithSelectOptionDescriptionTextColor(previous)
	}
}

func WithSelectOptionDescriptionBGColor(v Color) SelectOption {
	return func(cc *SelectOptions) SelectOption {
		previous := cc.DescriptionBGColor
		cc.DescriptionBGColor = v
		return WithSelectOptionDescriptionBGColor(previous)
	}
}

func WithSelectOptionSelectedDescriptionTextColor(v Color) SelectOption {
	return func(cc *SelectOptions) SelectOption {
		previous := cc.SelectedDescriptionTextColor
		cc.SelectedDescriptionTextColor = v
		return WithSelectOptionSelectedDescriptionTextColor(previous)
	}
}

func WithSelectOptionSelectedDescriptionBGColor(v Color) SelectOption {
	return func(cc *SelectOptions) SelectOption {
		previous := cc.SelectedDescriptionBGColor
		cc.SelectedDescriptionBGColor = v
		return WithSelectOptionSelectedDescriptionBGColor(previous)
	}
}

func WithSelectOptionScrollbarThumbColor(v Color) SelectOption {
	return func(cc *SelectOptions) SelectOption {
		previous := cc.ScrollbarThumbColor
		cc.ScrollbarThumbColor = v
		return WithSelectOptionScrollbarThumbColor(previous)
	}
}

func WithSelectOptionScrollbarBGColor(v Color) SelectOption {
	return func(cc *SelectOptions) SelectOption {
		previous := cc.ScrollbarBGColor
		cc.ScrollbarBGColor = v
		return WithSelectOptionScrollbarBGColor(previous)
	}
}

func NewSelectOptions(opts ...SelectOption) *SelectOptions {
	cc := newDefaultSelectOptions()
	for _, opt := range opts {
		_ = opt(cc)
	}
	if watchDogSelectOptions != nil {
		watchDogSelectOptions(cc)
	}
	return cc
}

func InstallSelectOptionsWatchDog(dog func(cc *SelectOptions)) {
	watchDogSelectOptions = dog
}

var watchDogSelectOptions func(cc *SelectOptions)

func newDefaultSelectOptions() *SelectOptions {

	cc := &SelectOptions{}

	for _, opt := range [...]SelectOption{
		WithSelectOptionOptions(nil...),
		WithSelectOptionRowsLimit(5),
		WithSelectOptionFinishFunc(nil),
		WithSelectOptionMulti(false),
		WithSelectOptionFinishKey(Enter),
		WithSelectOptionCancelKey(ControlC),
		WithSelectOptionTipText(""),
		WithSelectOptionTipTextColor(Yellow),
		WithSelectOptionTipBGColor(DefaultColor),
		WithSelectOptionValidFunc(nil),
		WithSelectOptionValidTextColor(Red),
		WithSelectOptionValidBGColor(DefaultColor),
		WithSelectOptionSuggestionTextColor(White),
		WithSelectOptionSuggestionBGColor(Cyan),
		WithSelectOptionSelectedSuggestionTextColor(Black),
		WithSelectOptionSelectedSuggestionBGColor(Turquoise),
		WithSelectOptionDescriptionTextColor(Black),
		WithSelectOptionDescriptionBGColor(Turquoise),
		WithSelectOptionSelectedDescriptionTextColor(White),
		WithSelectOptionSelectedDescriptionBGColor(Cyan),
		WithSelectOptionScrollbarThumbColor(DarkGray),
		WithSelectOptionScrollbarBGColor(Cyan),
	} {
		_ = opt(cc)
	}

	return cc
}
