// Code generated by optiongen. DO NOT EDIT.
// optiongen: github.com/timestee/optiongen

package promptx

import (
	"io"

	"github.com/aggronmagi/promptx/internal/std"
)

var _ = PromptOptionsOptionDeclareWithDefault()

type PromptOptions struct {
	Stdin  io.ReadCloser
	Stdout io.Writer
	// event chan size
	ChanSize int
	// default global input options
	InputOptions []InputOption
	// default global select options
	SelectOptions []SelectOption
	// default common options. use to create default optins
	CommonOpions []CommonOption
	// default manager. if it is not nil, ignore CommonOpions.
	BlocksManager BlocksManager
}

func (cc *PromptOptions) SetOption(opt PromptOption) {
	_ = opt(cc)
}

func (cc *PromptOptions) ApplyOption(opts ...PromptOption) {
	for _, opt := range opts {
		_ = opt(cc)
	}
}

func (cc *PromptOptions) GetSetOption(opt PromptOption) PromptOption {
	return opt(cc)
}

type PromptOption func(cc *PromptOptions) PromptOption

func WithStdin(v io.ReadCloser) PromptOption {
	return func(cc *PromptOptions) PromptOption {
		previous := cc.Stdin
		cc.Stdin = v
		return WithStdin(previous)
	}
}

func WithStdout(v io.Writer) PromptOption {
	return func(cc *PromptOptions) PromptOption {
		previous := cc.Stdout
		cc.Stdout = v
		return WithStdout(previous)
	}
}

func WithChanSize(v int) PromptOption {
	return func(cc *PromptOptions) PromptOption {
		previous := cc.ChanSize
		cc.ChanSize = v
		return WithChanSize(previous)
	}
}

func WithInputOptions(v ...InputOption) PromptOption {
	return func(cc *PromptOptions) PromptOption {
		previous := cc.InputOptions
		cc.InputOptions = v
		return WithInputOptions(previous...)
	}
}

func WithSelectOptions(v ...SelectOption) PromptOption {
	return func(cc *PromptOptions) PromptOption {
		previous := cc.SelectOptions
		cc.SelectOptions = v
		return WithSelectOptions(previous...)
	}
}

func WithCommonOpions(v ...CommonOption) PromptOption {
	return func(cc *PromptOptions) PromptOption {
		previous := cc.CommonOpions
		cc.CommonOpions = v
		return WithCommonOpions(previous...)
	}
}

func WithBlocksManager(v BlocksManager) PromptOption {
	return func(cc *PromptOptions) PromptOption {
		previous := cc.BlocksManager
		cc.BlocksManager = v
		return WithBlocksManager(previous)
	}
}

func NewPromptOptions(opts ...PromptOption) *PromptOptions {
	cc := newDefaultPromptOptions()
	for _, opt := range opts {
		_ = opt(cc)
	}
	if watchDogPromptOptions != nil {
		watchDogPromptOptions(cc)
	}
	return cc
}

func InstallPromptOptionsWatchDog(dog func(cc *PromptOptions)) {
	watchDogPromptOptions = dog
}

var watchDogPromptOptions func(cc *PromptOptions)

func newDefaultPromptOptions() *PromptOptions {

	cc := &PromptOptions{}

	for _, opt := range [...]PromptOption{
		WithStdin(std.Stdin),
		WithStdout(std.Stdout),
		WithChanSize(256),
		WithInputOptions(nil...),
		WithSelectOptions(nil...),
		WithCommonOpions(nil...),
		WithBlocksManager(nil),
	} {
		_ = opt(cc)
	}

	return cc
}
